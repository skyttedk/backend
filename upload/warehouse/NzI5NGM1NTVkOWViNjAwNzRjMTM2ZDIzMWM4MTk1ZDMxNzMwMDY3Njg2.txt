Filupload  (FTP)	
	
Hostname:  	ftp://prod47.magentohotel.dk 
Username:	demo-shop_dk 
Password:	TMYlR7En9WXhQFqzPJ 



Databaseadministration  (Phpmyadmin)	
	
Hostname:  	http://prod47.magentohotel.dk 
Username:	demo-shop_dk 
Password:	I1VHfPXSgYTRE1mF 
DB_host:	127.0.0.1 
DB_name:	demo-shop_dk




inner join users_shop_index on users_shop_index.user_id =  users.id
inner join pim_article on users_shop_index.pim_shop_id = article.id

where 
isnotnull pim_article.deleted_at


users_shop_index
JustCelebrate



pim_article

type_id = 1

deleted_at



18
SELECT * FROM `users` WHERE 


id in(SELECT `user_id` FROM `users_info` WHERE `user_type` = 2) and
inner j


SELECT  FROM `users_shop_index` WHERE `user_id` = 18 ORDER BY `pim_shop_id` ASC


Access to XMLHttpRequest at 'https://gavevalg.dk/valg/login.php' from origin 'https://www.gavevalg.dk' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
gavevalg.dk/valg/login.php:1 
        
        
       Failed to load resource: net::ERR_FAILED
valg/:1 Access to XMLHttpRequest at 'https://gavevalg.dk/valg/login.php' from origin 'https://www.gavevalg.dk' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
jquery.min.js:2 
        
        
       POST https://gavevalg.dk/valg/login.php net::ERR_FAILED 200 (OK)
send @ jquery.min.js:2
ajax @ jquery.min.js:2
w.<computed> @ jquery.min.js:2
Login.doLogin @ login.js?2660:143
(anonym) @ login.js?2660:58
dispatch @ jquery.min.js:2
y.handle @ jquery.min.js:2
valg/:1 Access to XMLHttpRequest at 'https://gavevalg.dk/valg/login.php' from origin 'https://www.gavevalg.dk' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
gavevalg.dk/valg/login.php:1 
        
        
       POST https://gavevalg.dk/valg/login.php net::ERR_FAILED 200 (OK)
valg/:1 Access to XMLHttpRequest at 'https://gavevalg.dk/valg/login.php' from origin 'https://www.gavevalg.dk' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
jquery.min.js:2 
        
        
       POST https://gavevalg.dk/valg/login.php net::ERR_FAILED 200 (OK)






SELECT u.*
FROM `users` u
INNER JOIN `users_info` ui ON u.`id` = ui.`user_id`
INNER JOIN `users_shop_index` usi ON usi.`user_id` = u.`id`
INNER JOIN `pim_article` pa ON pa.`id` = usi.`pim_shop_id`
WHERE ui.`user_type` = 2
AND pa.`deleted_at` IS  NULL;














SELECT 
    shop_present.id,
    shop_present.shop_id,
    shop.name as concept_code,
    `present_reservation`.id as pr_id,
    `present_reservation`.quantity,
  
    present_model.model_present_no, 
    present_model.model_name,
    present_model.model_no,
    (
        SELECT COUNT(*)
        FROM `order`
        WHERE `order`.`present_model_id` = present_model.model_id
    ) as antal,
    present_model.is_deleted
FROM `shop_present`
LEFT JOIN `present_model` ON `shop_present`.`present_id` = present_model.present_id
left join shop on shop_present.shop_id = shop.id
left join `present_reservation` on `present_model`.`model_id` = `present_reservation`.model_id 
WHERE 
    present_model.language_id = 1 
    AND shop_present.shop_id NOT IN (SELECT shop_id FROM cardshop_settings)
    AND shop_present.shop_id = 6763  

195759

    public function doUpdateModelData(){
        try {
            // Kontroller om der er sendt data
            if (empty($_POST)) {
                throw new Exception("Ingen data modtaget");
            }

               // Hent den eksisterende model
            $presentModel = PresentModel::find($model_id);


            // Liste over tilladte felter til opdatering
            $allowedFields = ['active', 'is_deleted','autopilot_lock'];

            // Filtrer $_POST data for kun at inkludere tilladte felter
            $updateData = array_intersect_key($_POST, array_flip($allowedFields));

            // Opdater modellen med de filtrerede data
            $presentModel->update_attributes($updateData);

            // Valider modellen før gem
            if (!$presentModel->is_valid()) {
                throw new Exception("Validering fejlede: " . implode(", ", $presentModel->errors()->full_messages()));
            }

            // Gem ændringerne
            if ($presentModel->save()) {
                // Log opdateringen
                $this->logModelUpdate($model_id, $updateData);

                response::success(json_encode([
                    "status" => "1",
                    "message" => "Model opdateret succesfuldt",
                    "data" => $presentModel->attributes()
                ]));
            } else {
                throw new Exception("Kunne ikke gemme ændringer");
            }
        } catch (Exception $e) {
            response::error(json_encode([
                "status" => "0",
                "message" => $e->getMessage()
            ]));
        }
    }







